ignore %r{^ignored/path/}, /public/
filter /\.txt$/, /.*\.zip/

notification :growl

group :frontend do
  guard 'bundler' do
    watch('Gemfile')
  end

  guard 'livereload' do
    watch(%r{^app/views/.+\.(erb|haml|slim)$})
    watch(%r{^app/helpers/.+\.rb})
    watch(%r{^app/assets/.+\.rb})
    watch(%r{^app/assets/.+\.(css|js|scss|jpg|png)})
    watch(%r{^public/.+\.(css|js|html)})
    watch(%r{^config/locales/.+\.yml})
    # Rails Assets Pipeline
    watch(%r{(app|vendor)(/assets/\w+/(.+\.(css|js|html|png|jpg))).*}) { |m| "/assets/#{m[3]}" }
  end
end

group :backend do
  guard 'rspec',cmd: 'rspec --color --format doc' do
    watch(%r{spec/.+_spec\.rb$})
    watch(%r{lib/(.+)\.rb$})     { |m| "spec/lib/#{m[1]}_spec.rb" }
    watch('spec/spec_helper.rb')  { "spec" }

    # Rails example
    watch(%r{^app/(.+)\.rb$})                           { |m| "spec/#{m[1]}_spec.rb" }
    watch(%r{^app/(.*)(\.erb|\.haml)$})                 { |m| "spec/#{m[1]}#{m[2]}_spec.rb" }
    watch(%r{^app/controllers/(.+)_(controller)\.rb$})  { |m| ["spec/routing/#{m[1]}_routing_spec.rb", "spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb", "spec/acceptance/#{m[1]}_spec.rb"] }
    watch(%r{^spec/support/(.+)\.rb$})                  { "spec" }
    watch('config/routes.rb')                           { "spec/routing" }
    watch('app/controllers/application_controller.rb')  { "spec/controllers" }
    # Capybara request specs
    watch(%r{^app/views/(.+)/.*\.(erb|haml)$})          { |m| "spec/requests/#{m[1]}_spec.rb" }
  end
end
